MESSAGES = {
    "bot_started": "üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã...",
    "max_open_trades": "‚ö†Ô∏è –ú–∞–∫—Å–∏–º—É–º –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç ({limit}). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã.",
      # –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ü–µ–Ω –∏ –æ–±—ä—ë–º–∞
    "price_check": (
        "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ {symbol}:\n"
        "–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: ${base_price:.6f}\n"
        "–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${current_price:.6f}\n"
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {price_change:.2f}%\n"
        "–û–±—ä—ë–º: ${volume_usdt:,.2f} USDT"
    ),

    "volume_below_threshold": "‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî –æ–±—ä—ë–º –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞.",
    "skip_slow_signal": "‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî —Ü–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω–æ ({time_delta} —Å–µ–∫ > {max_time} —Å–µ–∫).",
    "skip_smma_filter": "‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ SMMA —Ñ–∏–ª—å—Ç—Ä–æ–º –¥–ª—è {side}.",
    "skip_short_volume": "‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî –æ–±—ä—ë–º —É–≤–µ–ª–∏—á–∏–ª—Å—è, —à–æ—Ä—Ç –æ—Ç–º–µ–Ω—ë–Ω.",
    "skip_long_volume_decrease": "‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî –æ–±—ä—ë–º —Å–Ω–∏–∑–∏–ª—Å—è, –ª–æ–Ω–≥ –æ—Ç–º–µ–Ω—ë–Ω.",
    "telegram_sent": "üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.",
    "open_trade_saved": "üíæ –°–¥–µ–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {trade}.",
    "error_fetch": "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {error}",
    "error_processing": "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {symbol}: {error}",
    "trailing_stop_moved": "üîÑ –¢—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø –ø–æ {symbol} –ø–µ—Ä–µ–º–µ—â—ë–Ω –Ω–∞ ${new_level:.6f}.",
    "trailing_stop_triggered": "üîö –¢—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø –ø–æ {symbol} —Å—Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∏ —Ü–µ–Ω–µ ${current_price:.6f}.",
    "cooldown_active": "‚è≥ –ü—Ä–æ–ø—É—â–µ–Ω–æ {symbol} ‚Äî –µ—â—ë –Ω–µ –ø—Ä–æ—à—ë–ª –∫—É–ª–¥–∞—É–Ω ({remaining_time:.0f} —Å–µ–∫).",
    "signal_sent": "üì° –°–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ {symbol}. –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–¥–µ–ª–∫—É {side}.",
    
    # ... –¥—Ä—É–≥–∏–µ —à–∞–±–ª–æ–Ω—ã –ü—Ä–æ –≤–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ ...
    "restored_trades": "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {count} –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...",
    "monitoring_trade": "üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–¥–µ–ª–∫–∏: {symbol}",
    "market_scan_time": "‚è± –ü–æ–ª–Ω—ã–π —Å–∫–∞–Ω: {duration:.2f} —Å–µ–∫",
    "scanned_symbols": "‚úÖ –ü—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –ø–∞—Ä—ã: {symbols}",
    "open_trades_scan_time": "‚è± –°–∫–∞–Ω –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {duration:.2f} —Å–µ–∫",

}

def get_message(key, **kwargs):
    return MESSAGES.get(key, "").format(**kwargs)
